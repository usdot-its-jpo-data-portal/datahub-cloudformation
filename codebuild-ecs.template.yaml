AWSTemplateFormatVersion: "2010-09-09"
Description: CodeBuild projects and ECR repositories for ITS DataHub microservices.

Parameters: 
  ClusterNameDev: 
    Type: String
    Default: "datahub-cluster-dev"
  ClusterNameStage: 
    Type: String
    Default: "datahub-cluster-stage"
  ClusterNameProd: 
    Type: String
    Default: "datahub-cluster-prod"


Resources:
 ######################
  ### Admin UI Resources

  # ECR Repositories
  AdminUIDev:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: admin-ui-dev
  AdminUIStage:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: admin-ui-stage
  AdminUIProd:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: admin-ui-prod

  # CodeBuild Projects
  AdminUICodeBuildGeneric:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for testing buildability of all commits.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: "null"
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: "null"
      Name: admin-ui-generic
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-admin-ui.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/(master|development)$"
              ExcludeMatchedPattern: True
        Webhook: True

  AdminUICodeBuildDev:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Admin UI service to dev.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
            Type: PLAINTEXT
          - Name: IMAGE_REPO_NAME
            Value: !Ref AdminUIDev
            Type: PLAINTEXT
          - Name: ECS_CLUSTER
            Value: !Ref ClusterNameDev # TODO replace this with import
            Type: PLAINTEXT
          - Name: ECS_SERVICE
            Value: "admin-ui-service-dev" # TODO replace this with import
            Type: PLAINTEXT
      Name: admin-ui-dev
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-admin-ui.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/development$"
              ExcludeMatchedPattern: False
        Webhook: True

  AdminUICodeBuildStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Admin UI service to stage.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
            Type: PLAINTEXT
          - Name: IMAGE_REPO_NAME
            Value: !Ref AdminUIStage
            Type: PLAINTEXT
          - Name: ECS_CLUSTER
            Value: !Ref ClusterNameStage # TODO replace this with import
            Type: PLAINTEXT
          - Name: ECS_SERVICE
            Value: "admin-ui-service-stage" # TODO replace this with import
            Type: PLAINTEXT
      Name: admin-ui-stage
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-admin-ui.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/master$"
              ExcludeMatchedPattern: False
        Webhook: True

  AdminUICodeBuildProd:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for promoting the Admin UI service from stage to prod.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: STAGE_REPO_NAME
            Value: !Ref AdminUIStage
            Type: PLAINTEXT
          - Name: PROD_REPO_NAME
            Value: !Ref AdminUIProd
            Type: PLAINTEXT
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
            Type: PLAINTEXT
          - Name: $CLUSTER_NAME
            Value: !Ref ClusterNameProd
            Type: PLAINTEXT
          - Name: SERVICE_NAME
            Value: "admin-ui-service-prod" # TODO replace with import
            Type: PLAINTEXT
      Name: admin-ui-prod-promotion
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                docker: 18
            build:
              commands:
                - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
                - docker pull $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$STAGE_REPO_NAME:latest
                - docker tag $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$STAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$PROD_REPO_NAME:latest
                - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$PROD_REPO_NAME:latest
                - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment

 ######################
  ### Admin API Resources

  # ECR Repositories
  AdminAPIDev:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: admin-api-dev
  AdminAPIStage:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: admin-api-stage
  AdminAPIProd:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: admin-api-prod

  # CodeBuild Projects
  AdminAPICodeBuildGeneric:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for testing buildability of all commits.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: "null"
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: "null"
      Name: admin-api-generic
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-admin-api.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/(master|development)$"
              ExcludeMatchedPattern: True
        Webhook: True

  AdminAPICodeBuildDev:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Admin API service to dev.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
            Type: PLAINTEXT
          - Name: IMAGE_REPO_NAME
            Value: !Ref AdminAPIDev
            Type: PLAINTEXT
          - Name: ECS_CLUSTER
            Value: !Ref ClusterNameDev # TODO replace this with import
            Type: PLAINTEXT
          - Name: ECS_SERVICE
            Value: "admin-api-service-dev" # TODO replace this with import
            Type: PLAINTEXT
      Name: admin-api-dev
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-admin-api.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/development$"
              ExcludeMatchedPattern: False
        Webhook: True

  AdminAPICodeBuildStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Admin API service to stage.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
            Type: PLAINTEXT
          - Name: IMAGE_REPO_NAME
            Value: !Ref AdminAPIStage
            Type: PLAINTEXT
          - Name: ECS_CLUSTER
            Value: !Ref ClusterNameStage # TODO replace this with import
            Type: PLAINTEXT
          - Name: ECS_SERVICE
            Value: "admin-api-service-stage" # TODO replace this with import
            Type: PLAINTEXT
      Name: admin-api-stage
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-admin-api.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/master$"
              ExcludeMatchedPattern: False
        Webhook: True

  AdminAPICodeBuildProd:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for promoting the Admin API service from stage to prod.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: STAGE_REPO_NAME
            Value: !Ref AdminAPIStage
            Type: PLAINTEXT
          - Name: PROD_REPO_NAME
            Value: !Ref AdminAPIProd
            Type: PLAINTEXT
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
            Type: PLAINTEXT
          - Name: $CLUSTER_NAME
            Value: !Ref ClusterNameProd
            Type: PLAINTEXT
          - Name: SERVICE_NAME
            Value: "admin-api-service-prod" # TODO replace with import
            Type: PLAINTEXT
      Name: admin-api-prod-promotion
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                docker: 18
            build:
              commands:
                - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
                - docker pull $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$STAGE_REPO_NAME:latest
                - docker tag $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$STAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$PROD_REPO_NAME:latest
                - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$PROD_REPO_NAME:latest
                - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
