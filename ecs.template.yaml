---
AWSTemplateFormatVersion: "2010-09-09"
Description: ECS services used by ITS DataHub.

### Required SSM Variables:
# "{{resolve:ssm:ecs-task-role-arn:version}}"
# "{{resolve:ssm:ecs-execution-role-arn:version}}"
# "{{resolve:ssm:vpc-id:version}}"
# "{{resolve:ssm:external-sg-id:version}}"
# "{{resolve:ssm:vpc-sg-id:version}}"
# "{{resolve:ssm:ecs-sg-id:version}}"
# "{{resolve:ssm:subnet-a-dev-id:version}}"
# "{{resolve:ssm:subnet-b-dev-id:version}}"
# "{{resolve:ssm:subnet-a-stage-id:version}}"
# "{{resolve:ssm:subnet-b-stage-id:version}}"
# "{{resolve:ssm:subnet-a-prod-id:version}}"
# "{{resolve:ssm:subnet-b-prod-id:version}}"
# "{{resolve:ssm:admin-api-token:version}}"
# "{{resolve:ssm:es-domain-dev:version}}"

Parameters:
  AdminUIPort:
    Type: Number
    Default: 80
  AdminAPIPort:
    Type: Number
    Default: 3000

Resources:
  ###################################
  ### Admin UI Resources

  # Dev
  AdminUIServiceDev:
    Type: AWS::ECS::Service
    DependsOn:
      - AdminUIListenerDev
    Properties:
      ServiceName: admin-ui-service-dev
      Cluster: datahub-cluster-dev # TODO replace with ImportValue
      TaskDefinition: !Ref AdminUITaskDefDev
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 1
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - "{{resolve:ssm:subnet-a-dev-id:1}}"
            - "{{resolve:ssm:subnet-b-dev-id:1}}"
          SecurityGroups:
            - "{{resolve:ssm:ecs-sg-id:1}}"
      LoadBalancers:
        - ContainerName: admin-ui-container-dev
          ContainerPort: !Ref AdminUIPort
          TargetGroupArn: !Ref AdminUITargetGroupDev

  AdminUITargetGroupDev:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthyThresholdCount: 2
      Name: admin-ui-dev-tg
      Port: !Ref AdminUIPort
      Protocol: HTTP
      TargetType: ip
      VpcId: "{{resolve:ssm:vpc-id:1}}"

  AdminUIListenerDev:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref AdminUITargetGroupDev
          Type: forward
      LoadBalancerArn: !Ref AdminUILoadBalancerDev
      Port: !Ref AdminUIPort
      Protocol: HTTP

  AdminUILoadBalancerDev:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: admin-ui-dev-lb
      Scheme: internal
      SecurityGroups:
        - "{{resolve:ssm:vpc-sg-id:1}}"
      Subnets:
        - "{{resolve:ssm:subnet-a-dev-id:1}}"
        - "{{resolve:ssm:subnet-b-dev-id:1}}"

  AdminUITaskDefDev:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - AdminUILogGroupDev
    Properties:
      Family: admin-ui-dev-taskdef
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 0.5GB
      ExecutionRoleArn: "{{resolve:ssm:ecs-execution-role-arn:1}}"
      TaskRoleArn: "{{resolve:ssm:ecs-task-role-arn:1}}"
      ContainerDefinitions:
        - Name: admin-ui-container-dev
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/admin-ui-dev:latest"
          PortMappings:
            - ContainerPort: !Ref AdminUIPort
          Environment:
            - Name: PROXY_PASS
              Value: !Sub
                - "resolver 10.209.97.136 valid=10s; set $backend \"http://${LB_DOMAIN}:3000\"; proxy_pass $backend;"
                - { LB_DOMAIN: !GetAtt AdminUILoadBalancerDev.DNSName }
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref AdminUILogGroupDev
              awslogs-stream-prefix: ecs

  AdminUILogGroupDev:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/ecs/admin-ui-dev-taskdef"

  # Stage
  AdminUIServiceStage:
    Type: AWS::ECS::Service
    DependsOn:
      - AdminUIListenerStage
    Properties:
      ServiceName: admin-ui-service-stage
      Cluster: datahub-cluster-stage # TODO replace with ImportValue
      TaskDefinition: !Ref AdminUITaskDefStage
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 0 # TODO replace with 1 when codebuild deployments are successful
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - "{{resolve:ssm:subnet-a-stage-id:1}}"
            - "{{resolve:ssm:subnet-b-stage-id:1}}"
          SecurityGroups:
            - "{{resolve:ssm:ecs-sg-id:1}}"
      LoadBalancers:
        - ContainerName: admin-ui-container-stage
          ContainerPort: !Ref AdminUIPort
          TargetGroupArn: !Ref AdminUITargetGroupStage

  AdminUITargetGroupStage:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthyThresholdCount: 2
      Name: admin-ui-stage-tg
      Port: !Ref AdminUIPort
      Protocol: HTTP
      TargetType: ip
      VpcId: "{{resolve:ssm:vpc-id:1}}"

  AdminUIListenerStage:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref AdminUITargetGroupStage
          Type: forward
      LoadBalancerArn: !Ref AdminUILoadBalancerStage
      Port: !Ref AdminUIPort
      Protocol: HTTP

  AdminUILoadBalancerStage:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: admin-ui-stage-lb
      Scheme: internal
      SecurityGroups:
        - "{{resolve:ssm:vpc-sg-id:1}}"
      Subnets:
        - "{{resolve:ssm:subnet-a-stage-id:1}}"
        - "{{resolve:ssm:subnet-b-stage-id:1}}"

  AdminUITaskDefStage:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - AdminUILogGroupStage
    Properties:
      Family: admin-ui-stage-taskdef
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 0.5GB
      ExecutionRoleArn: "{{resolve:ssm:ecs-execution-role-arn:1}}"
      TaskRoleArn: "{{resolve:ssm:ecs-task-role-arn:1}}"
      ContainerDefinitions:
        - Name: admin-ui-container-stage
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/admin-ui-stage:latest"
          PortMappings:
            - ContainerPort: !Ref AdminUIPort
          Environment:
            - Name: PROXY_PASS
              Value: !Sub
                - "resolver 10.209.97.136 valid=10s; set $backend \"http://${LB_DOMAIN}:3000\"; proxy_pass $backend;"
                - { LB_DOMAIN: !GetAtt AdminUILoadBalancerStage.DNSName }
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref AdminUILogGroupStage
              awslogs-stream-prefix: ecs

  AdminUILogGroupStage:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/ecs/admin-ui-stage-taskdef"

  # Prod
  AdminUIServiceProd:
    Type: AWS::ECS::Service
    DependsOn:
      - AdminUIListenerProd
    Properties:
      ServiceName: admin-ui-service-prod
      Cluster: datahub-cluster-prod # TODO replace with ImportValue
      TaskDefinition: !Ref AdminUITaskDefProd
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 0 # TODO replace with 1 when codebuild deployments are successful
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - "{{resolve:ssm:subnet-a-prod-id:1}}"
            - "{{resolve:ssm:subnet-b-prod-id:1}}"
          SecurityGroups:
            - "{{resolve:ssm:ecs-sg-id:1}}"
      LoadBalancers:
        - ContainerName: admin-ui-container-prod
          ContainerPort: !Ref AdminUIPort
          TargetGroupArn: !Ref AdminUITargetGroupProd

  AdminUITargetGroupProd:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthyThresholdCount: 2
      Name: admin-ui-prod-tg
      Port: !Ref AdminUIPort
      Protocol: HTTP
      TargetType: ip
      VpcId: "{{resolve:ssm:vpc-id:1}}"

  AdminUIListenerProd:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref AdminUITargetGroupProd
          Type: forward
      LoadBalancerArn: !Ref AdminUILoadBalancerProd
      Port: !Ref AdminUIPort
      Protocol: HTTP

  AdminUILoadBalancerProd:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: admin-ui-prod-lb
      Scheme: internal
      SecurityGroups:
        - "{{resolve:ssm:vpc-sg-id:1}}"
      Subnets:
        - "{{resolve:ssm:subnet-a-prod-id:1}}"
        - "{{resolve:ssm:subnet-b-prod-id:1}}"

  AdminUITaskDefProd:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - AdminUILogGroupProd
    Properties:
      Family: admin-ui-prod-taskdef
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 0.5GB
      ExecutionRoleArn: "{{resolve:ssm:ecs-execution-role-arn:1}}"
      TaskRoleArn: "{{resolve:ssm:ecs-task-role-arn:1}}"
      ContainerDefinitions:
        - Name: admin-ui-container-prod
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/admin-ui-prod:latest"
          PortMappings:
            - ContainerPort: !Ref AdminUIPort
          Environment:
            - Name: PROXY_PASS
              Value: !Sub
                - "resolver 10.209.97.136 valid=10s; set $backend \"http://${LB_DOMAIN}:3000\"; proxy_pass $backend;"
                - { LB_DOMAIN: !GetAtt AdminUILoadBalancerProd.DNSName }
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref AdminUILogGroupProd
              awslogs-stream-prefix: ecs

  AdminUILogGroupProd:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/ecs/admin-ui-prod-taskdef"

  ###################################
  ### Admin API Resources

  # Dev
  AdminAPIServiceDev:
    Type: AWS::ECS::Service
    DependsOn:
      - AdminAPIListenerDev
    Properties:
      ServiceName: admin-api-service-dev
      Cluster: datahub-cluster-dev # TODO replace with ImportValue
      TaskDefinition: !Ref AdminAPITaskDefDev
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 1
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - "{{resolve:ssm:subnet-a-dev-id:1}}"
            - "{{resolve:ssm:subnet-b-dev-id:1}}"
          SecurityGroups:
            - "{{resolve:ssm:ecs-sg-id:1}}"
      LoadBalancers:
        - ContainerName: admin-api-container-dev
          ContainerPort: !Ref AdminAPIPort
          TargetGroupArn: !Ref AdminAPITargetGroupDev

  AdminAPITargetGroupDev:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/api/health"
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 5
      Name: admin-api-dev-tg
      Port: !Ref AdminAPIPort
      Protocol: HTTP
      TargetType: ip
      VpcId: "{{resolve:ssm:vpc-id:1}}"

  AdminAPIListenerDev:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref AdminAPITargetGroupDev
          Type: forward
      LoadBalancerArn: !Ref AdminAPILoadBalancerDev
      Port: !Ref AdminAPIPort
      Protocol: HTTP

  AdminAPILoadBalancerDev:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: admin-api-dev-lb
      Scheme: internal
      SecurityGroups:
        - "{{resolve:ssm:vpc-sg-id:1}}"
      Subnets:
        - "{{resolve:ssm:subnet-a-dev-id:1}}"
        - "{{resolve:ssm:subnet-b-dev-id:1}}"

  AdminAPITaskDefDev:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - AdminAPILogGroupDev
    Properties:
      Family: admin-api-dev-taskdef
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 0.5GB
      ExecutionRoleArn: "{{resolve:ssm:ecs-execution-role-arn:1}}"
      TaskRoleArn: "{{resolve:ssm:ecs-task-role-arn:1}}"
      ContainerDefinitions:
        - Name: admin-api-container-dev
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/admin-api-dev:latest"
          PortMappings:
            - ContainerPort: !Ref AdminAPIPort
          HealthCheck:
              Command: 
                - CMD-SHELL
                - curl -f http://localhost:3000/api/health || exit 1
              Interval: 30
              Retries: 3
              Timeout: 5
          Environment:
            - Name: datahub.admin.api.token.key
              Value: "{{resolve:ssm:admin-api-token:1}}"
            - Name: datahub.admin.api.es.host
              Value: "{{resolve:ssm:es-domain-dev:1}}"
            - Name: datahub.admin.api.es.port
              Value: "443"
            - Name: datahub.admin.api.es.scheme
              Value: "https"
            - Name: JAVA_OPTS
              Value: "-Xmx512M -Xms512M"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref AdminAPILogGroupDev
              awslogs-stream-prefix: ecs

  AdminAPILogGroupDev:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/ecs/admin-api-dev-taskdef"

  # Stage
  AdminAPIServiceStage:
    Type: AWS::ECS::Service
    DependsOn:
      - AdminAPIListenerStage
    Properties:
      ServiceName: admin-api-service-stage
      Cluster: datahub-cluster-stage # TODO replace with ImportValue
      TaskDefinition: !Ref AdminAPITaskDefStage
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 0 # TODO replace with 1 when codebuild deployments are successful
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - "{{resolve:ssm:subnet-a-stage-id:1}}"
            - "{{resolve:ssm:subnet-b-stage-id:1}}"
          SecurityGroups:
            - "{{resolve:ssm:ecs-sg-id:1}}"
      LoadBalancers:
        - ContainerName: admin-api-container-stage
          ContainerPort: !Ref AdminAPIPort
          TargetGroupArn: !Ref AdminAPITargetGroupStage

  AdminAPITargetGroupStage:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/api/health"
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 5
      Name: admin-api-stage-tg
      Port: !Ref AdminAPIPort
      Protocol: HTTP
      TargetType: ip
      VpcId: "{{resolve:ssm:vpc-id:1}}"

  AdminAPIListenerStage:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref AdminAPITargetGroupStage
          Type: forward
      LoadBalancerArn: !Ref AdminAPILoadBalancerStage
      Port: !Ref AdminAPIPort
      Protocol: HTTP

  AdminAPILoadBalancerStage:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: admin-api-stage-lb
      Scheme: internal
      SecurityGroups:
        - "{{resolve:ssm:vpc-sg-id:1}}"
      Subnets:
        - "{{resolve:ssm:subnet-a-stage-id:1}}"
        - "{{resolve:ssm:subnet-b-stage-id:1}}"

  AdminAPITaskDefStage:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - AdminAPILogGroupStage
    Properties:
      Family: admin-api-stage-taskdef
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 0.5GB
      ExecutionRoleArn: "{{resolve:ssm:ecs-execution-role-arn:1}}"
      TaskRoleArn: "{{resolve:ssm:ecs-task-role-arn:1}}"
      ContainerDefinitions:
        - Name: admin-api-container-stage
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/admin-api-stage:latest"
          PortMappings:
            - ContainerPort: !Ref AdminAPIPort
          HealthCheck:
              Command: 
                - CMD-SHELL
                - curl -f http://localhost:3000/api/health || exit 1
              Interval: 30
              Retries: 3
              Timeout: 5
          Environment:
            - Name: datahub.admin.api.token.key
              Value: "{{resolve:ssm:admin-api-token:1}}"
            - Name: datahub.admin.api.es.host
              Value: "{{resolve:ssm:es-domain-stage:1}}"
            - Name: datahub.admin.api.es.port
              Value: "443"
            - Name: datahub.admin.api.es.scheme
              Value: "https"
            - Name: JAVA_OPTS
              Value: "-Xmx512M -Xms512M"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref AdminAPILogGroupStage
              awslogs-stream-prefix: ecs

  AdminAPILogGroupStage:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/ecs/admin-api-stage-taskdef"

  # Prod
  AdminAPIServiceProd:
    Type: AWS::ECS::Service
    DependsOn:
      - AdminAPIListenerProd
    Properties:
      ServiceName: admin-api-service-prod
      Cluster: datahub-cluster-prod # TODO replace with ImportValue
      TaskDefinition: !Ref AdminAPITaskDefProd
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 0 # TODO replace with 1 when codebuild deployments are successful
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - "{{resolve:ssm:subnet-a-prod-id:1}}"
            - "{{resolve:ssm:subnet-b-prod-id:1}}"
          SecurityGroups:
            - "{{resolve:ssm:ecs-sg-id:1}}"
      LoadBalancers:
        - ContainerName: admin-api-container-prod
          ContainerPort: !Ref AdminAPIPort
          TargetGroupArn: !Ref AdminAPITargetGroupProd

  AdminAPITargetGroupProd:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/api/health"
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 5
      Name: admin-api-prod-tg
      Port: !Ref AdminAPIPort
      Protocol: HTTP
      TargetType: ip
      VpcId: "{{resolve:ssm:vpc-id:1}}"

  AdminAPIListenerProd:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref AdminAPITargetGroupProd
          Type: forward
      LoadBalancerArn: !Ref AdminAPILoadBalancerProd
      Port: !Ref AdminAPIPort
      Protocol: HTTP

  AdminAPILoadBalancerProd:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: admin-api-prod-lb
      Scheme: internal
      SecurityGroups:
        - "{{resolve:ssm:vpc-sg-id:1}}"
      Subnets:
        - "{{resolve:ssm:subnet-a-prod-id:1}}"
        - "{{resolve:ssm:subnet-b-prod-id:1}}"

  AdminAPITaskDefProd:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - AdminAPILogGroupProd
    Properties:
      Family: admin-api-prod-taskdef
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 0.5GB
      ExecutionRoleArn: "{{resolve:ssm:ecs-execution-role-arn:1}}"
      TaskRoleArn: "{{resolve:ssm:ecs-task-role-arn:1}}"
      ContainerDefinitions:
        - Name: admin-api-container-prod
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/admin-api-prod:latest"
          PortMappings:
            - ContainerPort: !Ref AdminAPIPort
          HealthCheck:
              Command: 
                - CMD-SHELL
                - curl -f http://localhost:3000/api/health || exit 1
              Interval: 30
              Retries: 3
              Timeout: 5
          Environment:
            - Name: datahub.admin.api.token.key
              Value: "{{resolve:ssm:admin-api-token:1}}"
            - Name: datahub.admin.api.es.host
              Value: "{{resolve:ssm:es-domain-prod:1}}"
            - Name: datahub.admin.api.es.port
              Value: "443"
            - Name: datahub.admin.api.es.scheme
              Value: "https"
            - Name: JAVA_OPTS
              Value: "-Xmx512M -Xms512M"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref AdminAPILogGroupProd
              awslogs-stream-prefix: ecs

  AdminAPILogGroupProd:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/ecs/admin-api-prod-taskdef"
