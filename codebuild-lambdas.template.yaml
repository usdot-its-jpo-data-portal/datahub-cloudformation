AWSTemplateFormatVersion: "2010-09-09"
Description: CodeBuild projects and ECR repositories for ITS DataHub lambda functions.

### Required SSM Variables:
# "{{resolve:ssm:base-image:version}}"
# "{{resolve:ssm:lambda-bucket:version}}"
# "{{resolve:ssm:codebuild-role-arn:version}}"
# "{{resolve:ssm:sqs-storage-bucket:version}}"
# "{{resolve:ssm:canary-results-sqs-dev:version}}"
# "{{resolve:ssm:canary-results-sqs-stage:version}}"
# "{{resolve:ssm:canary-results-sqs-prod:version}}"
# "{{resolve:ssm:canary-source-sqs-arn-dev:version}}"
# "{{resolve:ssm:canary-source-sqs-arn-stage:version}}"
# "{{resolve:ssm:canary-source-sqs-arn-prod:version}}"
# "{{resolve:ssm:slack-webhook-dev:version}}"
# "{{resolve:ssm:slack-webhook-stage:version}}"
# "{{resolve:ssm:slack-webhook-prod:version}}"
# "{{resolve:ssm:slack-ingest-dev:version}}"
# "{{resolve:ssm:slack-ingest-stage:version}}"
# "{{resolve:ssm:slack-ingest-prod:version}}"
# "{{resolve:ssm:elasticsearch-url-dev:version}}"
# "{{resolve:ssm:elasticsearch-url-stage:version}}"
# "{{resolve:ssm:elasticsearch-url-prod:version}}"
# "{{resolve:ssm:validation-results-recipients-dict-dev:version}}"
# "{{resolve:ssm:validation-results-recipients-dict-stage:version}}"
# "{{resolve:ssm:validation-results-recipients-dict-prod:version}}"
# "{{resolve:ssm:validation-results-sender:version}}"
# "{{resolve:ssm:validation-results-cc:version}}"
# "{{resolve:ssm:vpc-internal-sg-id:version}}"
# "{{resolve:ssm:subnets-dev:version}}"
# "{{resolve:ssm:subnets-stage:version}}"
# "{{resolve:ssm:subnets-prod:version}}"

Resources:
  ############################################
  ### Meta codebuild project for this template

  CloudFormationCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying changes to the master branch of datahub-cloudformation.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
      Name: datahub-cloudformation
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-cloudformation.git
        Type: GITHUB
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                docker: 18
            build:
              commands:
                - bash update-stack.sh
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/master$"
              ExcludeMatchedPattern: False
        Webhook: True

  ######################
  ### Canary Resources

  # ECR Repositories
  CanaryECRDev:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: canary-lambda-dev
  CanaryECRStage:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: canary-lambda-stage
  CanaryECRProd:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: canary-lambda-prod

  # CodeBuild Projects
  CanaryCodeBuildGeneric:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for testing buildability of all commits.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SQS_STORAGE_S3_BUCKET
            Type: PLAINTEXT
            Value: ""
          - Name: SQS_VALIDATION_QUEUE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: SQS_RESULT_QUEUE
            Type: PLAINTEXT
            Value: ""
          - Name: SQS_PUBLISHER_MODE
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: VERBOSE_OUTPUT
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: ENV
            Type: PLAINTEXT
            Value: generic
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} VERBOSEOUTPUT=${VERBOSE_OUTPUT} SQSPUBLISHERMODE=${SQS_PUBLISHER_MODE} SQSVALIDATIONQUEUEARN=${SQS_VALIDATION_QUEUE_ARN} SQSSTORAGES3BUCKET=${SQS_STORAGE_S3_BUCKET}"
          # Buildtime variables
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: canary-lambda-generic
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: canary-lambda-generic
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: canary-lambda-generic
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/canary-lambda.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/(master|development)$"
              ExcludeMatchedPattern: True
        Webhook: True

  CanaryCodeBuildDev:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Canary Lambda to dev.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SQS_STORAGE_S3_BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:sqs-storage-bucket:1}}"
          - Name: SQS_VALIDATION_QUEUE_ARN
            Type: PLAINTEXT
            Value: "{{resolve:ssm:canary-source-sqs-arn-dev:2}}"
          - Name: SQS_RESULT_QUEUE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:canary-results-sqs-dev:3}}"
          - Name: SQS_PUBLISHER_MODE
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: VERBOSE_OUTPUT
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: ENV
            Type: PLAINTEXT
            Value: dev
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} VERBOSEOUTPUT=${VERBOSE_OUTPUT} SQSPUBLISHERMODE=${SQS_PUBLISHER_MODE} SQSRESULTQUEUE=${SQS_RESULT_QUEUE} SQSVALIDATIONQUEUEARN=${SQS_VALIDATION_QUEUE_ARN} SQSSTORAGES3BUCKET=${SQS_STORAGE_S3_BUCKET}"
          # Buildtime variables
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: canary-lambda-dev
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: canary-lambda-dev
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: canary-lambda-dev
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/canary-lambda.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/development$"
              ExcludeMatchedPattern: False
        Webhook: True

  CanaryCodeBuildStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Canary Lambda to stage.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SQS_STORAGE_S3_BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:sqs-storage-bucket:1}}"
          - Name: SQS_VALIDATION_QUEUE_ARN
            Type: PLAINTEXT
            Value: "{{resolve:ssm:canary-source-sqs-arn-stage:1}}"
          - Name: SQS_RESULT_QUEUE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:canary-results-sqs-stage:4}}"
          - Name: SQS_PUBLISHER_MODE
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: VERBOSE_OUTPUT
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: ENV
            Type: PLAINTEXT
            Value: stage
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} VERBOSEOUTPUT=${VERBOSE_OUTPUT} SQSPUBLISHERMODE=${SQS_PUBLISHER_MODE} SQSRESULTQUEUE=${SQS_RESULT_QUEUE} SQSVALIDATIONQUEUEARN=${SQS_VALIDATION_QUEUE_ARN} SQSSTORAGES3BUCKET=${SQS_STORAGE_S3_BUCKET}"
          # Buildtime variables
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: canary-lambda-stage
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: canary-lambda-stage
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: canary-lambda-stage
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/canary-lambda.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/master$"
              ExcludeMatchedPattern: False
        Webhook: True

  CanaryCodeBuildProd:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Canary Lambda to prod.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SQS_STORAGE_S3_BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:sqs-storage-bucket:1}}"
          - Name: SQS_VALIDATION_QUEUE_ARN
            Type: PLAINTEXT
            Value: "{{resolve:ssm:canary-source-sqs-arn-prod:1}}"
          - Name: SQS_RESULT_QUEUE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:canary-results-sqs-prod:4}}"
          - Name: SQS_PUBLISHER_MODE
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: VERBOSE_OUTPUT
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: ENV
            Type: PLAINTEXT
            Value: prod
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} VERBOSEOUTPUT=${VERBOSE_OUTPUT} SQSPUBLISHERMODE=${SQS_PUBLISHER_MODE} SQSRESULTQUEUE=${SQS_RESULT_QUEUE} SQSVALIDATIONQUEUEARN=${SQS_VALIDATION_QUEUE_ARN} SQSSTORAGES3BUCKET=${SQS_STORAGE_S3_BUCKET}"
          # Buildtime variables
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: canary-lambda-prod
          - Name: ORIGIN_REPO
            Type: PLAINTEXT
            Value: !Ref CanaryECRStage
          - Name: DESTINATION_REPO
            Type: PLAINTEXT
            Value: !Ref CanaryECRProd
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: canary-lambda-prod-promotion
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                docker: 18
            build:
              commands:
                - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
                - docker pull $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$ORIGIN_REPO:latest
                - docker tag $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$ORIGIN_REPO:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$DESTINATION_REPO:latest
                - |
                  PARAMETER_OVERRIDES=$(eval echo $PARAMETER_OVERRIDES)
                  docker run --rm \
                    -e AWS_DEFAULT_REGION \
                    -e AWS_CONTAINER_CREDENTIALS_RELATIVE_URI \
                    -e "BUCKET=$BUCKET" \
                    -e "FUNCTION_NAME=$FUNCTION_NAME" \
                    -e "REGION=$AWS_DEFAULT_REGION" \
                    -e "ENV=$ENV" \
                    -e "PARAMETER_OVERRIDES=${PARAMETER_OVERRIDES}" \
                    -i $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$DESTINATION_REPO:latest
                - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$DESTINATION_REPO:latest

  ################################
  ### Validation Results Resources

  # ECR Repositories
  ValidationResultsECRDev:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: validation-results-lambda-dev
  ValidationResultsECRStage:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: validation-results-lambda-stage
  ValidationResultsECRProd:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: validation-results-lambda-prod

  # CodeBuild Projects
  ValidationResultsBuildGeneric:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for testing buildability of all commits.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SLACK_WEBHOOK
            Type: PLAINTEXT
            Value: ""
          - Name: SQS_RESULT_QUEUE
            Type: PLAINTEXT
            Value: ""
          - Name: VERBOSE_OUTPUT
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: RECIPIENTS_DICT
            Type: PLAINTEXT
            Value: "{}"
          - Name: SENDER
            Type: PLAINTEXT
            Value: ""
          - Name: CC
            Type: PLAINTEXT
            Value: ""
          - Name: ENV
            Type: PLAINTEXT
            Value: generic
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} SLACKWEBHOOK=${SLACK_WEBHOOK} SQSRESULTQUEUE=${SQS_RESULT_QUEUE} VERBOSEOUTPUT=${VERBOSE_OUTPUT} RECIPIENTSDICT=${RECIPIENTS_DICT} SENDER=${SENDER} CC=${CC}"
          # Buildtime variables
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: validation-results-lambda-generic
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: validation-results-lambda-generic
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: validation-results-lambda-generic
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/validation-results-slack-lambda.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/(master|development)$"
              ExcludeMatchedPattern: True
        Webhook: True

  ValidationResultsCodeBuildDev:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Validation Results Lambda to dev.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SLACK_WEBHOOK
            Type: PLAINTEXT
            Value: "{{resolve:ssm:slack-webhook-dev:2}}"
          - Name: SQS_RESULT_QUEUE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:canary-results-sqs-dev:2}}"
          - Name: VERBOSE_OUTPUT
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: RECIPIENTS_DICT
            Type: PLAINTEXT
            Value: "{{resolve:ssm:validation-results-recipients-dict-dev:3}}"
          - Name: SENDER
            Type: PLAINTEXT
            Value: "{{resolve:ssm:validation-results-sender:1}}"
          - Name: CC
            Type: PLAINTEXT
            Value: "{{resolve:ssm:validation-results-cc:1}}"
          - Name: ENV
            Type: PLAINTEXT
            Value: dev
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} SLACKWEBHOOK=${SLACK_WEBHOOK} SQSRESULTQUEUE=${SQS_RESULT_QUEUE} VERBOSEOUTPUT=${VERBOSE_OUTPUT} RECIPIENTSDICT=${RECIPIENTS_DICT} SENDER=${SENDER} CC=${CC}"
          # Buildtime variables
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: validation-results-lambda-dev
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: validation-results-lambda-dev
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: validation-results-lambda-dev
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/validation-results-slack-lambda.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/development$"
              ExcludeMatchedPattern: False
        Webhook: True

  ValidationResultsCodeBuildStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Validation Results Lambda to stage.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SLACK_WEBHOOK
            Type: PLAINTEXT
            Value: "{{resolve:ssm:slack-webhook-stage:2}}"
          - Name: SQS_RESULT_QUEUE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:canary-results-sqs-stage:3}}"
          - Name: VERBOSE_OUTPUT
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: RECIPIENTS_DICT
            Type: PLAINTEXT
            Value: "{{resolve:ssm:validation-results-recipients-dict-stage:2}}"
          - Name: SENDER
            Type: PLAINTEXT
            Value: "{{resolve:ssm:validation-results-sender:1}}"
          - Name: CC
            Type: PLAINTEXT
            Value: "{{resolve:ssm:validation-results-cc:1}}"
          - Name: ENV
            Type: PLAINTEXT
            Value: stage
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} SLACKWEBHOOK=${SLACK_WEBHOOK} SQSRESULTQUEUE=${SQS_RESULT_QUEUE} VERBOSEOUTPUT=${VERBOSE_OUTPUT} RECIPIENTSDICT=${RECIPIENTS_DICT} SENDER=${SENDER} CC=${CC}"
          # Buildtime variables
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: validation-results-lambda-stage
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: validation-results-lambda-stage
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: validation-results-lambda-stage
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/validation-results-slack-lambda.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/master$"
              ExcludeMatchedPattern: False
        Webhook: True

  ValidationResultsCodeBuildProd:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Validation Results Lambda to prod.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SLACK_WEBHOOK
            Type: PLAINTEXT
            Value: "{{resolve:ssm:slack-webhook-prod:3}}"
          - Name: SQS_RESULT_QUEUE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:canary-results-sqs-prod:3}}"
          - Name: VERBOSE_OUTPUT
            Type: PLAINTEXT
            Value: "TRUE"
          - Name: RECIPIENTS_DICT
            Type: PLAINTEXT
            Value: "{{resolve:ssm:validation-results-recipients-dict-prod:2}}"
          - Name: SENDER
            Type: PLAINTEXT
            Value: "{{resolve:ssm:validation-results-sender:1}}"
          - Name: CC
            Type: PLAINTEXT
            Value: "{{resolve:ssm:validation-results-cc:1}}"
          - Name: ENV
            Type: PLAINTEXT
            Value: prod
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} SLACKWEBHOOK=${SLACK_WEBHOOK} SQSRESULTQUEUE=${SQS_RESULT_QUEUE} VERBOSEOUTPUT=${VERBOSE_OUTPUT} RECIPIENTSDICT=${RECIPIENTS_DICT} SENDER=${SENDER} CC=${CC}"
          # Buildtime variables
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: validation-results-lambda-prod
          - Name: ORIGIN_REPO
            Type: PLAINTEXT
            Value: !Ref ValidationResultsECRStage
          - Name: DESTINATION_REPO
            Type: PLAINTEXT
            Value: !Ref ValidationResultsECRProd
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: validation-results-lambda-prod-promotion
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                docker: 18
            build:
              commands:
                - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
                - docker pull $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$ORIGIN_REPO:latest
                - docker tag $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$ORIGIN_REPO:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$DESTINATION_REPO:latest
                - |
                  PARAMETER_OVERRIDES=$(eval echo $PARAMETER_OVERRIDES)
                  docker run --rm \
                    -e AWS_DEFAULT_REGION \
                    -e AWS_CONTAINER_CREDENTIALS_RELATIVE_URI \
                    -e "BUCKET=$BUCKET" \
                    -e "FUNCTION_NAME=$FUNCTION_NAME" \
                    -e "REGION=$AWS_DEFAULT_REGION" \
                    -e "ENV=$ENV" \
                    -e "PARAMETER_OVERRIDES=${PARAMETER_OVERRIDES}" \
                    -i $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$DESTINATION_REPO:latest
                - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$DESTINATION_REPO:latest

  ############################
  ### Datahub Ingest Resources

  # ECR Repositories
  DatahubIngestECRDev:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: datahub-ingest-lambda-dev
  DatahubIngestECRStage:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: datahub-ingest-lambda-stage
  DatahubIngestECRProd:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: datahub-ingest-lambda-prod

  # CodeBuild Projects
  DatahubIngestBuildGeneric:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for testing buildability of all commits.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SLACK_WEBHOOK_URL
            Type: PLAINTEXT
            Value: ""
          - Name: ELASTICSEARCH_API_BASE_URL
            Type: PLAINTEXT
            Value: ""
          - Name: ENV
            Type: PLAINTEXT
            Value: generic
          - Name: SUBNETS
            Type: PLAINTEXT
            Value: ""
          - Name: SECURITY_GROUPS
            Type: PLAINTEXT
            Value: ""
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} SLACKWEBHOOKURL=${SLACK_WEBHOOK_URL} ENVIRONMENTNAME=${ENV} ELASTICSEARCHAPIBASEURL=${ELASTICSEARCH_API_BASE_URL} SUBNETS=${SUBNETS} SECURITYGROUPS=${SECURITY_GROUPS}"
          # Buildtime variables
          - Name: SONAR_TOKEN
            Type: PLAINTEXT
            Value: "{{resolve:ssm:sonar-token:1}}"
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: datahub-ingest-lambda-generic
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: datahub-ingest-lambda-generic
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: datahub-ingest-lambda-generic
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-ingest.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/(master|development)$"
              ExcludeMatchedPattern: True
        Webhook: True

  DatahubIngestCodeBuildDev:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Datahub Ingest Lambda to dev.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SLACK_WEBHOOK_URL
            Type: PLAINTEXT
            Value: "{{resolve:ssm:slack-ingest-dev:1}}"
          - Name: ELASTICSEARCH_API_BASE_URL
            Type: PLAINTEXT
            Value: "{{resolve:ssm:elasticsearch-url-dev:1}}"
          - Name: ENV
            Type: PLAINTEXT
            Value: dev
          - Name: SUBNETS
            Type: PLAINTEXT
            Value: "{{resolve:ssm:subnets-dev:1}}"
          - Name: SECURITY_GROUPS
            Type: PLAINTEXT
            Value: "{{resolve:ssm:vpc-internal-sg-id:1}}"
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} SLACKWEBHOOKURL=${SLACK_WEBHOOK_URL} ENVIRONMENTNAME=${ENV} ELASTICSEARCHAPIBASEURL=${ELASTICSEARCH_API_BASE_URL} SUBNETS=${SUBNETS} SECURITYGROUPS=${SECURITY_GROUPS}"
          # Buildtime variables
          - Name: SONAR_TOKEN
            Type: PLAINTEXT
            Value: "{{resolve:ssm:sonar-token:1}}"
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: datahub-ingest-lambda-dev
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: datahub-ingest-lambda-dev
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: datahub-ingest-lambda-dev
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-ingest.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/development$"
              ExcludeMatchedPattern: False
        Webhook: True

  DatahubIngestCodeBuildStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Datahub Ingest Lambda to stage.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SLACK_WEBHOOK_URL
            Type: PLAINTEXT
            Value: "{{resolve:ssm:slack-ingest-stage:2}}"
          - Name: ELASTICSEARCH_API_BASE_URL
            Type: PLAINTEXT
            Value: "{{resolve:ssm:elasticsearch-url-stage:2}}"
          - Name: ENV
            Type: PLAINTEXT
            Value: stage
          - Name: SUBNETS
            Type: PLAINTEXT
            Value: "{{resolve:ssm:subnets-stage:1}}"
          - Name: SECURITY_GROUPS
            Type: PLAINTEXT
            Value: "{{resolve:ssm:vpc-internal-sg-id:1}}"
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} SLACKWEBHOOKURL=${SLACK_WEBHOOK_URL} ENVIRONMENTNAME=${ENV} ELASTICSEARCHAPIBASEURL=${ELASTICSEARCH_API_BASE_URL} SUBNETS=${SUBNETS} SECURITYGROUPS=${SECURITY_GROUPS}"
          # Buildtime variables
          - Name: SONAR_TOKEN
            Type: PLAINTEXT
            Value: "{{resolve:ssm:sonar-token:1}}"
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: datahub-ingest-lambda-stage
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: datahub-ingest-lambda-stage
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: datahub-ingest-lambda-stage
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Auth:
          Type: OAUTH
        Location: https://github.com/usdot-its-jpo-data-portal/datahub-ingest.git
        Type: GITHUB
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: "^refs/heads/master$"
              ExcludeMatchedPattern: False
        Webhook: True

  DatahubIngestCodeBuildProd:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: CodeBuild project for deploying the Datahub Ingest Lambda to prod.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          # Runtime variables
          - Name: SLACK_WEBHOOK_URL
            Type: PLAINTEXT
            Value: "{{resolve:ssm:slack-ingest-prod:2}}"
          - Name: ELASTICSEARCH_API_BASE_URL
            Type: PLAINTEXT
            Value: "{{resolve:ssm:elasticsearch-url-prod:2}}"
          - Name: ENV
            Type: PLAINTEXT
            Value: prod
          - Name: SUBNETS
            Type: PLAINTEXT
            Value: "{{resolve:ssm:subnets-prod:1}}"
          - Name: SECURITY_GROUPS
            Type: PLAINTEXT
            Value: "{{resolve:ssm:vpc-internal-sg-id:1}}"
          - Name: PARAMETER_OVERRIDES
            Type: PLAINTEXT
            Value: "--parameter-overrides ENV=${ENV} SLACKWEBHOOKURL=${SLACK_WEBHOOK_URL} ENVIRONMENTNAME=${ENV} ELASTICSEARCHAPIBASEURL=${ELASTICSEARCH_API_BASE_URL} SUBNETS=${SUBNETS} SECURITYGROUPS=${SECURITY_GROUPS}"
          # Buildtime variables
          - Name: SONAR_TOKEN
            Type: PLAINTEXT
            Value: "{{resolve:ssm:sonar-token:1}}"
          - Name: FUNCTION_NAME
            Type: PLAINTEXT
            Value: datahub-ingest-lambda-prod
          - Name: ORIGIN_REPO
            Type: PLAINTEXT
            Value: !Ref DatahubIngestECRStage
          - Name: DESTINATION_REPO
            Type: PLAINTEXT
            Value: !Ref DatahubIngestECRProd
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: BASE_IMAGE
            Type: PLAINTEXT
            Value: "{{resolve:ssm:base-image:1}}"
          - Name: BUCKET
            Type: PLAINTEXT
            Value: "{{resolve:ssm:lambda-bucket:1}}"
      Name: datahub-ingest-lambda-prod-promotion
      ServiceRole: "{{resolve:ssm:codebuild-role-arn:1}}"
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                docker: 18
            build:
              commands:
                - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
                - docker pull $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$ORIGIN_REPO:latest
                - docker tag $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$ORIGIN_REPO:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$DESTINATION_REPO:latest
                - |
                  PARAMETER_OVERRIDES=$(eval echo $PARAMETER_OVERRIDES)
                  docker run --rm \
                    -e AWS_DEFAULT_REGION \
                    -e AWS_CONTAINER_CREDENTIALS_RELATIVE_URI \
                    -e "BUCKET=$BUCKET" \
                    -e "FUNCTION_NAME=$FUNCTION_NAME" \
                    -e "REGION=$AWS_DEFAULT_REGION" \
                    -e "ENV=$ENV" \
                    -e "PARAMETER_OVERRIDES=${PARAMETER_OVERRIDES}" \
                    -i $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$DESTINATION_REPO:latest
                - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$DESTINATION_REPO:latest
